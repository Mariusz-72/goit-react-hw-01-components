{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows\\\\GitHub\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport css from '../Statistics/Statistics.module.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = ({\n  title,\n  stats\n}) => {\n  function getRandomHexColor() {\n    return \"#\" + Math.floor(Math.random() * 0xffffff).toString(16);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"statistics\",\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"statList\",\n      children: stats.map(stat => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        style: {\n          backgroundColor: getRandomHexColor()\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: stat.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"percentage\",\n          children: [stat.percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }, this)]\n      }, stat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 11\n  }, this);\n};\n_c = Statistics;\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["css","PropTypes","jsxDEV","_jsxDEV","Statistics","title","stats","getRandomHexColor","Math","floor","random","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stat","style","backgroundColor","label","percentage","id","_c","propTypes","string","arrayOf","shape","isRequired","number","$RefreshReg$"],"sources":["C:/Users/Windows/GitHub/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"sourcesContent":["import css from '../Statistics/Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n    function getRandomHexColor() {\r\n         return \"#\" + Math.floor(Math.random() * 0xffffff).toString(16);\r\n        }\r\n\r\n        return (\r\n          <section className=\"statistics\">\r\n            {title && <h2 className=\"title\">{title}</h2>}\r\n            <ul className=\"statList\">\r\n              {stats.map(stat => (\r\n                <li\r\n                  key={stat.id}\r\n                  className=\"item\"\r\n                  style={{ backgroundColor: getRandomHexColor() }}\r\n                >\r\n                  <span className=\"label\">{stat.label}</span>\r\n                  <span className=\"percentage\">{stat.percentage}%</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n    })\r\n    ),\r\n};\r\n\r\nexport default Statistics;"],"mappings":";AAAA,OAAOA,GAAG,MAAM,qCAAqC;AACrD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EACrC,SAASC,iBAAiBA,CAAA,EAAG;IACxB,OAAO,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC/D;EAEA,oBACER,OAAA;IAASS,SAAS,EAAC,YAAY;IAAAC,QAAA,GAC5BR,KAAK,iBAAIF,OAAA;MAAIS,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5Cd,OAAA;MAAIS,SAAS,EAAC,UAAU;MAAAC,QAAA,EACrBP,KAAK,CAACY,GAAG,CAACC,IAAI,iBACbhB,OAAA;QAEES,SAAS,EAAC,MAAM;QAChBQ,KAAK,EAAE;UAAEC,eAAe,EAAEd,iBAAiB,CAAC;QAAE,CAAE;QAAAM,QAAA,gBAEhDV,OAAA;UAAMS,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEM,IAAI,CAACG;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3Cd,OAAA;UAAMS,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAEM,IAAI,CAACI,UAAU,EAAC,GAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GALjDE,IAAI,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEpB,CAAC;AAAAQ,EAAA,GAtBKrB,UAAU;AAwBhBA,UAAU,CAACsB,SAAS,GAAG;EACnBrB,KAAK,EAAEJ,SAAS,CAAC0B,MAAM;EACvBrB,KAAK,EAAEL,SAAS,CAAC2B,OAAO,CAAC3B,SAAS,CAAC4B,KAAK,CAAC;IACrCL,EAAE,EAAEvB,SAAS,CAAC0B,MAAM,CAACG,UAAU;IAC/BR,KAAK,EAAErB,SAAS,CAAC0B,MAAM,CAACG,UAAU;IAClCP,UAAU,EAAEtB,SAAS,CAAC8B,MAAM,CAACD;EACjC,CAAC,CACD;AACJ,CAAC;AAED,eAAe1B,UAAU;AAAC,IAAAqB,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}