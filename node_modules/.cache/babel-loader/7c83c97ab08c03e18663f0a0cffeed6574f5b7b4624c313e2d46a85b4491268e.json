{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows\\\\GitHub\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport css from './Statistics.module.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = ({\n  title,\n  stats\n}) => {\n  function getRandomHexColor() {\n    return '#' + Math.floor(Math.random() * 0xffffff).toString(16);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css.statistics,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.statList,\n      children: stats.map(stat => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.item,\n        style: {\n          backgroundColor: getRandomHexColor()\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.label,\n          children: stat.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.percentage,\n          children: [stat.percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, stat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n};\n_c = Statistics;\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["css","PropTypes","jsxDEV","_jsxDEV","Statistics","title","stats","getRandomHexColor","Math","floor","random","toString","className","statistics","children","fileName","_jsxFileName","lineNumber","columnNumber","statList","map","stat","item","style","backgroundColor","label","percentage","id","_c","propTypes","string","arrayOf","shape","isRequired","number","$RefreshReg$"],"sources":["C:/Users/Windows/GitHub/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"sourcesContent":["import css from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n    function getRandomHexColor() {\r\n        return '#' + Math.floor(Math.random() * 0xffffff).toString(16);\r\n    }\r\n\r\n\r\n        return (\r\n            <section className={css.statistics}>\r\n                {title && <h2 className={css.title}>{title}</h2>}\r\n                <ul className={css.statList}>\r\n            {stats.map(stat => (\r\n                <li\r\n                key={stat.id}\r\n                className={css.item}\r\n                style={{ backgroundColor: getRandomHexColor() }}\r\n                >\r\n                    <span className={css.label}>{stat.label}</span>\r\n                    <span className={css.percentage}>{stat.percentage}%</span>\r\n                </li>\r\n            ))}\r\n            </ul>\r\n        </section>\r\n        );\r\n    };\r\n\r\n    Statistics.propTypes = {\r\n        title: PropTypes.string,\r\n        stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        })\r\n        ),\r\n    };\r\n\r\nexport default Statistics;\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,yBAAyB;AACzC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EACrC,SAASC,iBAAiBA,CAAA,EAAG;IACzB,OAAO,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;EAClE;EAGI,oBACIR,OAAA;IAASS,SAAS,EAAEZ,GAAG,CAACa,UAAW;IAAAC,QAAA,GAC9BT,KAAK,iBAAIF,OAAA;MAAIS,SAAS,EAAEZ,GAAG,CAACK,KAAM;MAAAS,QAAA,EAAET;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChDf,OAAA;MAAIS,SAAS,EAAEZ,GAAG,CAACmB,QAAS;MAAAL,QAAA,EAC/BR,KAAK,CAACc,GAAG,CAACC,IAAI,iBACXlB,OAAA;QAEAS,SAAS,EAAEZ,GAAG,CAACsB,IAAK;QACpBC,KAAK,EAAE;UAAEC,eAAe,EAAEjB,iBAAiB,CAAC;QAAE,CAAE;QAAAO,QAAA,gBAE5CX,OAAA;UAAMS,SAAS,EAAEZ,GAAG,CAACyB,KAAM;UAAAX,QAAA,EAAEO,IAAI,CAACI;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/Cf,OAAA;UAAMS,SAAS,EAAEZ,GAAG,CAAC0B,UAAW;UAAAZ,QAAA,GAAEO,IAAI,CAACK,UAAU,EAAC,GAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GALzDG,IAAI,CAACM,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMR,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACU,EAAA,GAvBAxB,UAAU;AAyBZA,UAAU,CAACyB,SAAS,GAAG;EACnBxB,KAAK,EAAEJ,SAAS,CAAC6B,MAAM;EACvBxB,KAAK,EAAEL,SAAS,CAAC8B,OAAO,CACxB9B,SAAS,CAAC+B,KAAK,CAAC;IACZL,EAAE,EAAE1B,SAAS,CAAC6B,MAAM,CAACG,UAAU;IAC/BR,KAAK,EAAExB,SAAS,CAAC6B,MAAM,CAACG,UAAU;IAClCP,UAAU,EAAEzB,SAAS,CAACiC,MAAM,CAACD;EACjC,CAAC,CACD;AACJ,CAAC;AAEL,eAAe7B,UAAU;AAAC,IAAAwB,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}